@model SearchVM

@{
    ViewData["Title"] = "Multi Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .error {
        color: #F00;
        background-color: #FFF;
    }
</style>

<div>
    <form id="form" class="row g-3" method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="col-md-4">Search Criteria</div>

        <div class="col-md-4">
            <input class="form-check-input" type="radio" name="op" value="1" checked>
            <label class="form-check-label">GCE</label>
        </div>
        <div class="col-md-4">
            <input class="form-check-input" type="radio" name="op" value="2">
            <label class="form-check-label">GCR</label>
        </div>

        <div class="col-md-6">
            <label for="inputEmail4" class="form-label">Agent CEA NO</label>
            <input class="form-control mygroup" asp-for="AgentCEANO" value="207607465H">
            <span asp-validation-for="AgentCEANO" class="text-danger"></span>
        </div>

        <div class="col-md-6">
            <label for="inputPassword4" class="form-label">Agent NAME</label>
            <input class="form-control mygroup" asp-for="AgentName">
            <span asp-validation-for="AgentName" class="text-danger"></span>
        </div>

        <div class="col-md-12">
            <label for="inputEmail4" class="form-label">Submission Date/Received</label>
        </div>

        <div class="col-md-6 mt-0">
            <label for="inputEmail4" class="form-label">From</label>
            <input type="date" class="form-control" value="2016-03-11" asp-for="From">
            <span asp-validation-for="From" class="text-danger"></span>
        </div>

        <div class="col-md-6 mt-0">
            <label for="inputEmail4" class="form-label">To</label>
            <input type="date" class="form-control" value="2022-03-11" asp-for="To">
            <span asp-validation-for="To" class="text-danger"></span>
        </div>
        <button type="button" class="btn btn-primary" id="Search" onclick="SearchClick()">Search</button>
    </form>
</div>
<div id="partialViewContainer"></div>

@section Scripts{

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.2/additional-methods.min.js"></script>

    <script>
        $.validator.addMethod("dateFrom",
            function (value, element) {
                let d = new Date(value);
                r = (d >= new Date('2016-01-01') && d <= new Date());
                return r;
            },
            "Date >=  2016-01-01 && Date <= Date time now"
        );
        $.validator.addMethod("dateTo",
            function (value, element) {
                let z = document.querySelector('input[name="From"]').value;
                let preD = new Date(z.split('-')[0], z.split('-')[1] - 1, z.split('-')[2]);
                let d = new Date(value);
                r = (d <= new Date() && d >= preD);
                return r; // FALSE => THÔNG BÁO
            },
            "Date <= DateNow , Date >= preDay"
        );
        $("#form").validate({
            rules: {
                AgentCEANO: {
                    require_from_group: [1, ".mygroup"],
                    minlength: 3,
                    maxlength: 100
                },
                AgentName: {
                    require_from_group: [1, ".mygroup"],
                    minlength: 3,
                    maxlength: 100
                },
                From: {
                    required: true,
                    dateFrom: true
                },
                To: {
                    required: true,
                    dateTo: true
                }
            },
            messages: {
                AgentCEANO: {
                    minlength: "Min length = 3",
                },
                AgentName: {
                    minlength: "Min length = 3",
                },
                From: {
                    required: "Vui lòng nhập ở đây",
                },
                To: {
                    required: "Vui lòng nhập ở đây",
                }
            },
        });

        function SearchClick() {
            if ($("#form").valid()) {
                var formData = $("#form").serializeArray();
                $.ajax({
                    url: '/TransData/Search',
                    method: "Post",
                    data: formData,
                    success: function (result) {
                        $('#partialViewContainer').empty();
                        $('#partialViewContainer').html(result);
                    },
                    error: function (response) {
                        $('#form').empty();
                        alert("error");
                        console.log(response.responseText);
                    },
                });
            }
        }

        $(document).on('click', '.pagination a', function (event) {

            event.preventDefault();

            let page = $(this).attr('href');
            let pageSizeSelected = $('#dropdown').val();

            //let formData = $("#form").serializeArray();
            //formData.push({ name: "Page", value: page });

            let data = {};
            let formData = $("#form").serializeArray().map(function (x) { data[x.name] = x.value == "" ? null : x.value; });;
            data.Page = page;
            data.PageSize = pageSizeSelected;

            $.ajax({
                method: "POST",
                url: '/TransData/Search',
                data: data,
                //data: $.param(formData),
                success: function (result) {
                    $('#partialViewContainer').empty();
                    $('#partialViewContainer').html(result);
                    $('select').val(pageSizeSelected);
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        });

        //function Export() {
        //    let page = document.querySelector(".active").value;
        //    let formData = $("#form").serializeArray();
        //    formData.push({ name: "Page", value: page });
        //    console.log(formData);
        //    $.ajax({
        //        url: '/TransData/Excel',
        //        method: "Post",
        //        data: formData,
        //        success: function (result) {
        //            $('#partialViewContainer').empty();
        //            $('#partialViewContainer').html(result);
        //        },
        //        error: function (response) {
        //            console.log(response.responseText);
        //        },
        //    });
        //}

        // Handle Export

        $(document).on("click", "#handleExport", function () {
            let page = document.querySelector(".active").value;
            let data = {};
            let formData = $("#form").serializeArray().map(function (x) { data[x.name] = x.value == "" ? null : x.value; });;
            data.fileName = "rental.xlsx";
            let url = "/TransData/Excel";
            downloadFile(url, data);
        });

        function downloadFile(url, data, onSuccess, onError) {
            console.log(data);
            // Use XMLHttpRequest instead of Jquery $ajax
            xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function () {
                //debugger;
                let a;
                if (xhttp.readyState === 4) {
                    if (xhttp.status === 200) {
                        // Trick for making downloadable link
                        a = document.createElement('a');
                        a.id = 'btn-download-' + new Date().getTime();
                        a.href = window.URL.createObjectURL(xhttp.response);
                        a.download = data.fileName;
                        a.style.display = 'none';
                        document.body.appendChild(a);
                        a.click();

                        if (onSuccess != undefined && typeof onSuccess === "function")
                            onSuccess();

                    } else if (xhttp.status === 500 && onError != undefined && typeof onError === "function") {
                        onError();
                    }
                }
            };

            // Post data to URL which handles post request
            xhttp.open("POST", url);
            xhttp.setRequestHeader("Content-type", "application/json"); //"multipart/form-data", "application/x-www-form-urlencoded", "application/json"

            // You should set responseType as blob for binary responses
            xhttp.responseType = 'blob';
            xhttp.send(JSON.stringify(data));
        };


        $(document).on('change', '#dropdown', function (event) {

            let pageSizeSelected = $('#dropdown').val();
            alert(pageSizeSelected);
            let data = {};
            let formData = $("#form").serializeArray().map(function (x) { data[x.name] = x.value == "" ? null : x.value; });;
            data.Page = 1;
            data.PageSize = pageSizeSelected;
            console.log(data);
            $.ajax({
                method: "POST",
                url: '/TransData/Search',
                data: data,
                success: function (result) {
                    $('#partialViewContainer').empty();
                    $('#partialViewContainer').html(result);
                    $('select').val(pageSizeSelected);
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        });

    </script>
}
